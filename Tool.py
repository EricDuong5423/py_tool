import asyncio
import logging
from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.chrome.service import Service
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.support import expected_conditions as EC
from pymongo import MongoClient
import requests  # Th√™m th∆∞ vi·ªán requests

# C·∫•u h√¨nh log
logging.basicConfig(
    filename='app.log',
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)

chat_id = "-4630038358"
client = MongoClient('mongodb://foo:bar@103.140.249.159:27017/')
db = client["intern-tool"]
collection = db["company-image"]

options = Options()
options.add_argument("--headless")  # Ch·∫°y kh√¥ng giao di·ªán ng∆∞·ªùi d√πng
options.add_argument("--no-sandbox")  # Ch·∫°y kh√¥ng sandbox
options.add_argument("--disable-dev-shm-usage")  # Kh·∫Øc ph·ª•c l·ªói thi·∫øu b·ªô nh·ªõ
options.add_argument("--disable-gpu")  # T·∫Øt GPU n·∫øu kh√¥ng c·∫ßn thi·∫øt

# Kh·ªüi t·∫°o ChromeDriver v·ªõi c√°c t√πy ch·ªçn tr√™n
service = Service(ChromeDriverManager().install())
driver = webdriver.Chrome(service=service, options=options)

# H√†m g·ª≠i th√¥ng b√°o Telegram
def send_telegram_message(message):
    bot_token = "8020956192:AAFXZl4p1MD5kmEBU0ceGlSd_hRQpdz9Q0U"  # Thay b·∫±ng token bot c·ªßa b·∫°n
    chat_id = "-4630038358"  # Thay b·∫±ng chat ID c·ªßa b·∫°n
    url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
    payload = {
        "chat_id": chat_id,
        "text": message
    }
    try:
        response = requests.post(url, data=payload)
        response.raise_for_status()  # Ki·ªÉm tra l·ªói t·ª´ API
        print("ƒê√£ g·ª≠i th√¥ng b√°o th√†nh c√¥ng!")
    except requests.exceptions.RequestException as e:
        print(f"L·ªói khi g·ª≠i th√¥ng b√°o: {e}")

async def get_logo_urls():
    """L·∫•y danh s√°ch URL logo t·ª´ trang web"""
    try:
        driver.get("https://internship.cse.hcmut.edu.vn/")
        WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.CSS_SELECTOR, "[style*='background-image']"))
        )
        logos = driver.find_elements(By.CSS_SELECTOR, "[style*='background-image']")
        urls = []
        for logo in logos:
            style = logo.get_attribute("style")
            start = style.find('url("') + 5
            end = style.find('")', start)
            img_url = "https://internship.cse.hcmut.edu.vn" + style[start:end]
            urls.append(img_url)
        return urls
    finally:
        driver.quit()  # ƒê√≥ng tr√¨nh duy·ªát d√π c√≥ l·ªói hay kh√¥ng

async def check_new_logos():
    """Ki·ªÉm tra logo m·ªõi v√† g·ª≠i th√¥ng b√°o Telegram"""
    new_logos = []
    current_logos = await get_logo_urls()  # L·∫•y c√°c logo hi·ªán t·∫°i
    for logo in current_logos:
        if collection.find_one({"url": logo}) is None:
            new_logos.append(logo)
            collection.insert_one({"url": logo})  # L∆∞u logo m·ªõi v√†o DB

    if new_logos:
        messages = []
        message = f"üî• Ph√°t hi·ªán ra {len(new_logos)} c√¥ng ty m·ªõi!\n" + "\n".join(new_logos)
        messages.append(message)
        message = "Truy c·∫≠p ngay ·ªü ƒë∆∞·ªùng link sau ƒë√¢y: https://internship.cse.hcmut.edu.vn/"
        messages.append(message)

        # G·ª≠i tin nh·∫Øn Telegram
        for msg in messages:
            send_telegram_message(msg)  # G·ªçi h√†m g·ª≠i tin nh·∫Øn
        logging.info("‚úÖ ƒê√£ g·ª≠i th√¥ng b√°o Telegram!")

async def check_logos():
    while True:
        await check_new_logos()  # H√†m ki·ªÉm tra logo m·ªõi
        await asyncio.sleep(60)

# Ch·∫°y v√≤ng l·∫∑p b·∫•t ƒë·ªìng b·ªô khi PM2 kh·ªüi ƒë·ªông
if __name__ == "__main__":
    asyncio.run(check_logos())
